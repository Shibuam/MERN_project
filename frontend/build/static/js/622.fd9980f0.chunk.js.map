{"version":3,"file":"static/js/622.fd9980f0.chunk.js","mappings":"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","sources":["components/teacher/ProfileCom.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Grid, Button, Typography, Paper, TextField } from \"@mui/material\";\nimport { SidebarTeacher } from \"../../components/teacher/sidebar-teacher\";\n\nconst ProfileCom = () => {\n  const navigate = useNavigate();\n  const [previewSource, setPreviewSource] = useState(null);\n  const [fileInputState, setFileInputState] = useState(null);\n  const [imagecloud, setimagecloud] = useState();\n  const [uploadLink, setUploadLink] = useState(false);\n  const [videoLink, setVideoLink] = useState(\"\");\n  const [userDetails, setUserDetails] = useState(\"\");\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    const teacherInfo = async () => {\n      const config = {\n        headers: {\n          authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      let { data } = await axios.get(`/api/teacher/teacherDetails`, config);\n      setimagecloud(data.teacherDetails.image);\n      setUserDetails(data);\n    };\n    teacherInfo();\n  }, []);\n  console.log(userDetails);\n\n\n  const config = {\n    headers: {\n      authorization: `Bearer ${user.token}`,\n    },\n  };\n\n  const videoLinkHandler = async () => {\n    alert(videoLink);\n  \n    let url = \"/api/teacher/updateVideo\";\n    let { data } = await axios.post(url, { videoLink }, config);\n  };\n\n  const [coordinates,setCoordinates]=useState([])\n \n\n  const getLocation=async()=>{\n\n    navigator.geolocation.getCurrentPosition(function(position) {\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        setCoordinates([...coordinates,position.coords.longitude,position.coords.latitude])\n      \n      });\n     \n      \n  }\nconst submitCoordinates=async()=>{\n\n  let {data}=await axios.post('/api/teacher/location',{coordinates:coordinates}, config)\n  console.log(data)\n}\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12} md={2}>\n          <SidebarTeacher />\n        </Grid>\n\n        <Grid item xs={12} md={3} margin={\"10px\"}>\n          {imagecloud ? (\n            <img\n              style={{\n                height: \"150px\",\n                display: \"flex\",\n                alignContent: \"center\",\n              }}\n              src={imagecloud}\n            ></img>\n          ) : (\n            <img src=\"/imagePaceHolder.png\" alt=\"image label\"></img>\n          )}\n          <br />{\" \"}\n          <Button onClick={() => navigate(\"/profilePicture\")}>\n            Change/Add image\n          </Button>\n          <br />\n        </Grid>\n        <Grid item xs={12} md={3} margin={\"10px\"}>\n          <Typography style={{ color: \"red\" }}>Basic Informations </Typography>\n          {userDetails && (\n            <>\n              <Typography>Name:{userDetails.teacherDetails.name}</Typography>\n              <Typography>email:{userDetails.teacherDetails.email}</Typography>\n              <Typography>\n                Contact Number:{userDetails.teacherDetails.contactNumber}\n              </Typography>\n              <Typography>PIN:{userDetails.teacherDetails.pincode}</Typography>\n              <Typography>\n                Subject:{userDetails.teacherDetails.subject}\n              </Typography>\n              <Typography>Location:</Typography>\n              <Typography>latitude:{coordinates}</Typography>\n              {/* <Typography>Longitude:{longitude}</Typography> */}\n              <Button onClick={()=>getLocation()}> Update</Button>\n              <Button onClick={()=>submitCoordinates()}> Submit</Button>\n            </>\n          )}\n        </Grid>\n        <Grid item xs={12} md={3} margin={\"10px\"}>\n          {userDetails.teacherDetails && (\n            <iframe\n              width=\"auto\"\n              height=\"auto\"\n              src={userDetails.teacherDetails.video}\n              title=\"YouTube video player\"\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen\n            ></iframe>\n          )}\n          <br />\n          Demo video\n          <Button onClick={() => setUploadLink(true)}>\n            Upload/change Video\n          </Button>\n          <br />\n          {uploadLink && (\n            <>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Video link\"\n                value={videoLink}\n                variant=\"standard\"\n                onChange={(e) => setVideoLink(e.target.value)}\n              />\n              <Button onClick={videoLinkHandler}>Submit</Button>\n              \n            </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ProfileCom;\n"],"names":["navigate","useNavigate","useState","imagecloud","setimagecloud","uploadLink","setUploadLink","videoLink","setVideoLink","userDetails","setUserDetails","user","JSON","parse","localStorage","getItem","useEffect","teacherInfo","config","headers","authorization","token","axios","data","teacherDetails","image","console","log","videoLinkHandler","alert","coordinates","setCoordinates","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","submitCoordinates","container","item","xs","md","margin","style","height","display","alignContent","src","alt","onClick","color","name","email","contactNumber","pincode","subject","width","video","title","frameborder","allow","allowfullscreen","id","label","value","variant","onChange","e","target"],"sourceRoot":""}